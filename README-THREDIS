
Thredis
-------

Thredis is threaded Redis. (Apparently "thredis" is also "ribbons" in
Scots). At this point it is work-in-progress ALPHA quality, probably
contains many bugs and in need of much improvement, but should be
sufficient as proof-of-concept to toy around with. Use at your own
risk.

Thredis is for the most part identical to Redis. We did rename the
executable to thredis-server so that it looks different from
redis-server when running ps, etc.


Problem

If you're using Redis for complex operations (such as big ZUNION
operations), the server can block for a long time and only uses one
core. It would be nice if other operations could take place
concurrently, using many cores.

Solution

Certain commands (the ones that are obviously O(N) or more) are
submited to their own threads.

How / implications

Clearly this requires locking. The total number of locks required is
equal to the number of clients + one per every db + a global server
lock. Every operation requires checking the hash of locked keys, which
makes everything slower. Also, determinism is impossible with
concurrency, therefore you should NEVER use Thredis as a master - your
slaves will have a different database from the master.

Getting started

You probably want start out by trying the thredis-2.6 branch. It is
based on a stable Redis release.


Performance
-----------

The most striking performance gain can be observed on SMP systems when
running time-consuming operations. In a simple experiement, 20 clients
running a ZUNIONSTORE operation on 25 Sorted Sets of 100,000 random
entries took 61.79s on single-threaded Redis versus 6.30s on
Thredis. This test was conducted on a 24-core server. This is a more
than 980% (or almost 10x) performance improvement!

For simple O(1) or similar operations Thredis is only slightly slower
than Redis. Simple operations are not submitted to separate threads
and run in the main event loop, just like Redis. When no threads are
running, Thredis bypasses locking altogether (for the mostpart) which
makes it nearly identical to Redis.

Here is the output of a redis-benchmark -n 1000000 run comparing Redis
2.6 with Thredis 2.6 on the same machine (4-core Linux in a VirtualBox
on a MacBook Pro):

                                        Redis      Thredis
PING_INLINE                             48473.1    46864.75    96.68%
PING_BULK                               47966.23   48849.59   101.84%
SET                                     47310.4    41228.61    87.14%
GET                                     47637.2    47856.05   100.46%
INCR                                    47673.53   42540.52    89.23%
LPUSH                                   47869.79   45842.12    95.76%
LPOP                                    47118.69   42240.43    89.65%
SADD                                    47712.2    42900.04    89.91%
SPOP                                    48229.96   47737.25    98.98%
LPUSH (needed to benchmark LRANGE)      45657.93   42700.37    93.52%
LRANGE_100 (first 100 elements)         28432.52   20302.1     71.40%
LRANGE_300 (first 300 elements)         12911.22   10552.42    81.73%
LRANGE_500 (first 450 elements)         9201.33    7772.91     84.48%
LRANGE_600 (first 600 elements)         7400.66    6249.49     84.45%
MSET (10 keys)                          25248.06   24556.15    97.26%
                                                      AVERAGE: 90.83%
